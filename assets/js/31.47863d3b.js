(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{413:function(t,e,s){"use strict";s.r(e);var a=s(45),o=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"using-the-lockable-doors-object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#using-the-lockable-doors-object"}},[t._v("#")]),t._v(" Using the "),s("code",[t._v("lockable-doors")]),t._v(" object")]),t._v(" "),s("p",[s("em",[t._v("Published: 3/7/2022 for TQ Version: 3.2.7")])]),t._v(" "),s("p",[t._v("The "),s("a",{attrs:{href:"https://github.com/TwilioQuest/twilioquest-base/tree/main/objects/lockable-doors",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("lockable-doors")]),t._v(" from the "),s("code",[t._v("twilioquest-base")]),s("OutboundLink")],1),t._v(" repository can be useful to conditionally allow players access to different parts of your level.")]),t._v(" "),s("p",[t._v("These doors use a state machine to manage themselves. They can be in "),s("code",[t._v("open")]),t._v(", "),s("code",[t._v("opening")]),t._v(", "),s("code",[t._v("closing")]),t._v(", and "),s("code",[t._v("closed")]),t._v(" states.")]),t._v(" "),s("p",[t._v("This state machine is created "),s("a",{attrs:{href:"https://github.com/TwilioQuest/twilioquest-base/blob/main/objects/lockable-doors/config.js#L42",target:"_blank",rel:"noopener noreferrer"}},[t._v("in the onMapDidLoad event"),s("OutboundLink")],1),t._v(" via the "),s("code",[t._v("initOpenCloseFSM()")]),t._v(" function.")]),t._v(" "),s("p",[t._v("The Fog Owl Door object is another custom object that uses this same state machine. The Fog Owl Door also has other logic to allow the player to "),s("a",{attrs:{href:"https://github.com/TwilioQuest/twilioquest-base/blob/main/objects/fog-owl-door/config.js#L11-L39",target:"_blank",rel:"noopener noreferrer"}},[t._v("change the door's states via trigger areas"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("p",[t._v("In the above code, the "),s("code",[t._v("self.state.fsm.action('open')")]),t._v(" and "),s("code",[t._v("self.state.fsm.action('close')")]),t._v(" calls cause the door to open and close. You should be able to use these same functions in any scripting environment in TwilioQuest where you have a reference to the door object.")]),t._v(" "),s("p",[t._v("Here's an example code snippter that assumes there's a trigger area in a map with key "),s("code",[t._v("myDoorOpenTrigger")]),t._v(" and a "),s("code",[t._v("lockable-door")]),t._v(" with key "),s("code",[t._v("myLockableDoor")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"triggerAreaWasEntered"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n  event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myDoorOpenTrigger"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  world"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEachEntities")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myLockableDoor"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("door")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n    door"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fsm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("action")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"open"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=o.exports}}]);